plugins {
   id "com.gradle.plugin-publish" version "0.10.1"
   id "pl.allegro.tech.build.axion-release" version "1.10.2"
   id 'groovy'
   id 'java-gradle-plugin'
   id "com.github.breadmoirai.github-release" version "2.2.10"
   id 'org.unbroken-dome.test-sets' version '2.2.1'
   id "com.github.ben-manes.versions" version "0.27.0"
   id 'com.adarshr.test-logger' version '2.0.0'
   id "com.redpillanalytics.gradle-analytics" version "1.2.3"
   id "com.redpillanalytics.gradle-aws" version "0.1.6"
}

ext.pluginName = rootProject.name

// send gradle analytics
analytics {
   organization = 'Red Pill Analytics'
   sinks {
      pubsub
      s3 {
         prefix = 'rpa-gradle-analytics'
      }
   }
}

aws {
   s3 {
      latest {
         bucket = docsBucket
         key =  "${pluginName}/latest/"
         path = groovydoc.destinationDir.getPath()
      }
      release {
         bucket = docsBucket
         key = "${pluginName}/${version}/"
         path = groovydoc.destinationDir.getPath()
      }
   }
}

scmVersion {

   tag {
      prefix = 'v'
      versionSeparator = ''
   }
   ignoreUncommittedChanges = true
}

//set Gradle version to SCM Version
allprojects {
   project.version = scmVersion.version
}

task cleanJunit(type: Delete) {
   delete getTestResultsDir()
}

task cleanLibs(type: Delete) {
   delete getLibsDir()
}

testSets {
   integration
}

githubRelease {

   token = githubToken
   owner = 'RedPillAnalytics'
   repo = rootProject.name
   tagName = "v${version}"
   releaseAssets = fileTree(dir: buildDir, includes: ["**/*${version}*", "**/*${version}*.jar"]).toList()
}

dependencies {

   compile gradleApi()
   compile localGroovy()
   compile 'org.slf4j:slf4j-simple:+'

   testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'

   // AWS
   compile 'com.amazonaws:aws-java-sdk-s3:+'

   //other plugins
   compile "gradle.plugin.com.redpillanalytics:gradle-properties:0.1.2"
}

// Default artifact naming.
group = 'com.redpillanalytics'

repositories {
   jcenter()
   maven {
      url "https://plugins.gradle.org/m2/"
   }
}

gradlePlugin {
   plugins {
      pluginAws {
         id = "com.redpillanalytics.${pluginName}"
         implementationClass = 'com.redpillanalytics.aws.AwsPlugin'
      }
   }
}

pluginBundle {

   description = "A plugin for working with AWS. Initial functionality is for working with S3."
   website = "https://github.com/RedPillAnalytics/${rootProject.name}/"
   vcsUrl = "https://github.com/RedPillAnalytics/${rootProject.name}/"

   plugins {
      pluginAws {
         id = "com.redpillanalytics.${pluginName}"
         displayName = pluginName
         tags = ['aws', 's3']
         version = project.version
      }
   }
}

task runAllTests {
   description 'Run all defined tests.'
   group 'verification'
}

tasks.withType(Test) {
   tasks.runAllTests.dependsOn it
   failFast true
   ignoreFailures true
   testLogging.showStandardStreams true
   systemProperty 'projectBase', temporaryDir
}

tasks.githubRelease.mustRunAfter tasks.publishPlugins

task publish {
   description 'Custom publish task.'
   group 'publishing'
   dependsOn tasks.publishPlugins, tasks.githubRelease
}



